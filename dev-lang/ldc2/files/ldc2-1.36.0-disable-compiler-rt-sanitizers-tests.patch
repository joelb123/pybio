diff --git a/tests/PGO/lit.local.cfg b/tests/PGO/lit.local.cfg
index 9638e26..4578f1a 100644
--- a/tests/PGO/lit.local.cfg
+++ b/tests/PGO/lit.local.cfg
@@ -1,2 +1,2 @@
 # Add "PGO_RT" feature, assuming the `profile` compiler-rt library is available
-config.available_features.add('PGO_RT')
+#config.available_features.add('PGO_RT')
diff --git a/tests/instrument/lit.local.cfg b/tests/instrument/lit.local.cfg
index 9366e7b..5030a1e 100644
--- a/tests/instrument/lit.local.cfg
+++ b/tests/instrument/lit.local.cfg
@@ -2,4 +2,5 @@ import platform
 
 # Add "XRay_RT" feature on non-Windows, assuming the compiler-rt libraries are available
 if (platform.system() != 'Windows'):
-    config.available_features.add('XRay_RT')
+    #config.available_features.add('XRay_RT')
+    pass
diff --git a/tests/sanitizers/lit.local.cfg b/tests/sanitizers/lit.local.cfg
index ce12558..6bd5021 100644
--- a/tests/sanitizers/lit.local.cfg
+++ b/tests/sanitizers/lit.local.cfg
@@ -4,24 +4,27 @@ import platform
 sys = platform.system()
 
 # Add "LSan" feature, assuming the compiler-rt library is available
-config.available_features.add('LSan')
+#config.available_features.add('LSan')
 
 # FreeBSD TSan doesn't seem to work,
 # Linux TSan currently only works with static druntime,
 # and there's no Windows TSan (yet?).
 if (sys != 'FreeBSD') and (sys != 'Windows') and not (sys == 'Linux' and config.shared_rt_libs_only):
-    config.available_features.add('TSan')
+    #config.available_features.add('TSan')
+    pass
 
 # FreeBSD ASan and MSan don't cope well with ASLR (might do with FreeBSD 14 according to https://github.com/llvm/llvm-project/pull/73439)
 if sys != 'FreeBSD':
-    config.available_features.add('ASan')
+    #config.available_features.add('ASan')
+    pass
 
 # MSan is supported on Linux, FreeBSD (modulo ASLR issue), and OpenBSD: https://clang.llvm.org/docs/MemorySanitizer.html#supported-platforms
 if (sys == 'Linux') or (sys == 'OpenBSD'):
-    config.available_features.add('MSan')
+    #config.available_features.add('MSan')
+    pass
 
 # Add "Fuzzer" feature, assuming the compiler-rt library is available
-config.available_features.add('Fuzzer')
+#config.available_features.add('Fuzzer')
 
 if 'ASan' in config.available_features:
     # On Darwin, ASan defaults to `abort_on_error=1`, which would make tests run
